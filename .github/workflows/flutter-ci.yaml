name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
      - main
      - release
      - stable
  create:
    tags:
      - release-*
  pull_request:
    branches:
      - main

# on: push    # Default will running for every branch.

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v2.3.0
        with:
          channel: "stable" # 'beta' # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter
      
      # Get secrets from GitHub and decode it to get secrets.dart
      - name: Decode base64 secrets
        run: |
          sudo echo "${CLIENT_ID// /}" | base64 --decode > lib/secrets.dart
          echo "${echo "${CLIENT_ID// /}" | base64 --decode}"
        # env:
        #   CLIENT_ID: ${{ secrets.CLIENT_ID }}

      # Get flutter dependencies.
      - name: "Run flutter pub get"
        run: flutter pub get

      # Check for any formatting issues in the code.
      # - run: flutter format --set-exit-if-changed --fix .

      # Statically analyze the Dart code for any errors.

      - run: flutter analyze .

      # Run widget tests for our flutter project.
      - run: flutter test

      # Build apk.
      - run: flutter build apk

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
